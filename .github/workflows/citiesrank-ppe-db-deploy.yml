name: Deploy migrations to CitiesRank PPE DB
on:
  push:
    branches:
      - main
  workflow_dispatch:
  # This enables manual triggering
  # You can optionally add inputs here if you need to parameterize the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{secrets.AZ_CITIESRANK_VM_KEY}}
      SSH_KEY_PATH: ~/.ssh
      SSH_KEY_NAME: citiesrank-ppe-key
      VM_DOMAIN: citiesrank-ppe.westus2.cloudapp.azure.com
      VM_ADMIN: citiesrank-ppe-admin
      MAX_HEALTH_CHECK_RETRIES: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}}
          sudo chmod 600 ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}}
          ssh-keyscan -H ${{env.VM_DOMAIN}} > ${{env.SSH_KEY_PATH}}/known_hosts
        shell: bash

      - name: Copy migrations to VM
        run: |
          ssh -i ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}} ${{env.VM_ADMIN}}@${{env.VM_DOMAIN}} 'mkdir -p ~/pb/pb_migrations'
          scp -i ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}} -r pocketbase/pb_migrations/* ${{env.VM_ADMIN}}@${{env.VM_DOMAIN}}:~/pb/pb_migrations/
          # Restart the pocketbase service to apply the migrations
          ssh -i ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}} ${{env.VM_ADMIN}}@${{env.VM_DOMAIN}} 'sudo systemctl restart pocketbase'
          # Allow pocketbase to bind to port 443
          ssh -i ${{env.SSH_KEY_PATH}}/${{env.SSH_KEY_NAME}} ${{env.VM_ADMIN}}@${{env.VM_DOMAIN}} 'sudo setcap cap_net_bind_service=+ep ~/pb/pocketbase'
      - name: Wait for service to be healthy
        run: |
          retries=0
          until curl -s -I https://${{env.VM_DOMAIN}} | grep "HTTP/[1-9].[0-9] [23]"; do
            if [ $retries -ge ${{env.MAX_HEALTH_CHECK_RETRIES}} ]; then
              echo "Service did not become healthy within 5 minutes"
              exit 1
            fi
            echo "Waiting for service to become healthy... (Attempt $retries of ${{env.MAX_HEALTH_CHECK_RETRIES}})"
            sleep 5
            retries=$((retries + 1))
          done
          echo "Service is healthy!"
